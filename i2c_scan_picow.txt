Adafruit CircuitPython 7.3.0 on 2022-05-23; Adafruit Feather ESP32S2 with ESP32S2
code.py output:
I2C addresses found: ['0xb', '0x40', '0x60', '0x68', '0x69']



in.py", line 94, in InitializeDevices
  File "adafruit_ds1307.py", line 110, in __init__
OSError: [Errno 19] No such device

Code done running.

Adafruit CircuitPython 9.2.8 on 2025-05-28; Raspberry Pi Pico W with rp2040
>>>
>>>
>>>
>>> import i2c
i2cdisplaybus   i2ctarget
>>> import i2c_scan
I2C addresses found: ['0x9', '0xa', '0xb', '0xc', '0xd', '0xe', '0x10', '0x11', '0x12', '0x13', '0x14', '0x15', '0x16', '0x17', '0x18', '0x19', '0x1a', '0x1b', '0x1c', '0x1d', '0x1e', '0x20', '0x21', '0x22', '0x23', '0x24', '0x25', '0x26', '0x27', '0x28', '0x29', '0x2a', '0x2b', '0x2c', '0x2d', '0x2e', '0x30', '0x31', '0x32', '0x33', '0x34', '0x35', '0x36', '0x38', '0x39', '0x3a', '0x40', '0x41', '0x42', '0x43', '0x44', '0x45', '0x46', '0x47', '0x48', '0x49', '0x4a', '0x4b', '0x4c', '0x4d', '0x4e', '0x50', '0x51', '0x52', '0x53', '0x54', '0x55', '0x56', '0x58', '0x59', '0x5a', '0x5c', '0x60', '0x61', '0x62', '0x63', '0x64', '0x65', '0x66', '0x67', '0x68', '0x69', '0x6a', '0x6b', '0x6c', '0x6d', '0x6e', '0x70', '0x71', '0x72', '0x74']
I2C addresses found: ['0x9', '0xa', '0xb', '0xc', '0xd', '0xe', '0x10', '0x11', '0x12', '0x13', '0x14', '0x15', '0x16', '0x17', '0x18', '0x19', '0x1a', '0x1b', '0x1c', '0x1d', '0x1e', '0x20', '0x21', '0x22', '0x23', '0x24', '0x25', '0x26', '0x27', '0x28', '0x29', '0x2a', '0x2b', '0x2c', '0x2d', '0x2e', '0x30', '0x31', '0x32', '0x33', '0x34', '0x35', '0x36', '0x38', '0x39', '0x3a', '0x40', '0x41', '0x42', '0x43', '0x44', '0x45', '0x46', '0x47', '0x48', '0x49', '0x4a', '0x4b', '0x4c', '0x4d', '0x4e', '0x50', '0x51', '0x52', '0x53', '0x54', '0x55', '0x56', '0x58', '0x59', '0x5a', '0x60', '0x61', '0x62', '0x63', '0x64', '0x65', '0x66', '0x67', '0x68', '0x69', '0x6a', '0x6b', '0x6c', '0x6d', '0x6e', '0x70', '0x71', '0x72', '0x74']
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "i2c_scan.py", line 19, in <module>
KeyboardInterrupt:
>>>

